@implements IDisposable

@inject NavigationManager NavigationManager
@inject ShoppingCartService shoppingCartService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Bake´ N Cake</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="fa fa-sold fa-house" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;Förstasidan
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="ShoppingCart">
                <span class="fa fa-shopping-cart" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;Varukorgen
                @* <span class="fa fa-shopping-cart" aria-hidden="true"></span>&nbsp; Shopping Cart (<b>@shoppingCartItemsCount</b>) *@
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="fa fa-solid fa-lock" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;Låst för obehörig
            </NavLink>
        </div>

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="fa fa-solid fa-user" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;@context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="fa fa-solid fa-arrow-right-from-bracket aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;Logga ut
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="fa fa-regular fa-user" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;Registrering
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="fa fa-solid fa-arrow-right-to-bracket" aria-hidden="true"></span>&nbsp;&nbsp;&nbsp;&nbsp;Logga in
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    // private int shoppingCartItemsCount;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;

        // Prenumerera på händelsen när komponenten initialiseras
        //shoppingCartService.OnShoppingCartChanged += UpdateShoppingCartItemsCount;

        // Hämta det aktuella antalet varor i varukorgen
        //shoppingCartItemsCount = shoppingCartService.GetShoppingCartItemsCount();
        // UpdateShoppingCartItemsCount(shoppingCartService.GetShoppingCartItemsCount());
    }

    // private void UpdateShoppingCartItemsCount(int count)
    // {
    //     // Uppdatera antalet varor i varukorgen när händelsen triggas
    //     shoppingCartItemsCount = count;

    //     // Uppdatera komponentens UI
    //     StateHasChanged();
    // }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
