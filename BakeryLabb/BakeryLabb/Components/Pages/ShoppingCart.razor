@page "/ShoppingCart"
@inject ShoppingCartService shoppingCartService
@using BakeryLabb.Data

<h3>Varukorg</h3>

<div class="cart">

  @*   @foreach (var cartProduct in ShoppingCartProducts)
    {
        <ShoppingCartProductCard ProductInCart="@cartProduct" />
    } *@
    @if (ShoppingCartProducts.Count > 0)
    {
        foreach (var cartProduct in ShoppingCartProducts)
        {
            <ShoppingCartProductCard ProductInCart="@cartProduct" />
        }
    }
    else
    {
        <p>Varukorgen är tom</p>
    }
</div>

@code {
    private List<ShoppingCartProduct>? ShoppingCartProducts { get; set; } = new();

    //List<Product> Cart => ShoppingCartService.GetCart();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Hämta varukorgen från localStorage
            ShoppingCartProducts = await shoppingCartService.GetShoppingCart();
            StateHasChanged();
        }
    }

    // protected override async Task OnInitializedAsync()
    // {
    //     // Hämta varukorgen från localStorage
    //     ShoppingCartProducts = await shoppingCartService.GetShoppingCart();
    //     StateHasChanged();
    // }
}
